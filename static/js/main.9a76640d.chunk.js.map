{"version":3,"sources":["components/nominationModal.js","components/card.js","views/home.js","reportWebVitals.js","index.js"],"names":["Option","selected","push","this","props","imdb","localStorage","setItem","JSON","stringify","card","num","nominatedMovie","title","imdbID","release","modal","current","hide","nomi","setState","results","hasNomination","length","home","showBanner","noresult","class","disable","includes","disabled","onClick","nominate","bind","React","Component","NominationModal","state","query","replace","axios","data","Response","tableRows","Search","forEach","element","Title","Year","placeholder","onEnter","input","search","onChange","onSearchClick","id","Card","getItem","parse","rank","createRef","position","indexOf","splice","removeItem","show","style","visibility","reset","hideOnOverlayClicked","ref","cogoToast","info","Home","cards","submitModal","message","banner","hideAfter","href","target","rel","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a76640d.chunk.js","sourcesContent":["import React from 'react' \nimport SearchField from 'react-search-field'\nimport axios from 'axios'\nimport '../css/modal.css'\nimport {selected} from '../views/home'\n\nclass Option extends React.Component {\n  /**\n   * Nominate\n   * \n   * Adds an IMDB ID to the list of selected movies. Hides the popup. Resets\n   * the search results area. Sets state of corresponding card to \n   * hasNomination = true. Checks number of nominated movies and displays \n   * banner if greater than 5.\n   */\n  nominate() {\n    selected.push(this.props.imdb)\n    localStorage.setItem('selected', JSON.stringify(selected))\n    \n    localStorage.setItem(\n      `nomi${this.props.card.props.num}`, \n      JSON.stringify({nominatedMovie: this.props.title,\n      imdbID: this.props.imdb,\n      release: this.props.release,\n    }))\n\n    this.props.card.modal.current.hide()\n\n    this.props.nomi.setState({results: []})\n    this.props.card.setState({\n      hasNomination: true,\n      nominatedMovie: this.props.title,\n      imdbID: this.props.imdb,\n      release: this.props.release,\n    })\n\n    if (selected.length === 5) {\n      this.props.card.props.home.setState({showBanner: true})\n    }\n  }\n\n  render() {\n    if (this.props.noresult === true) {\n      return (\n        <div class=\"optionCard\">\n          <div class=\"optionTitle\">\n            <h3>No Results.</h3>\n          </div>\n        </div>\n      )\n    }\n\n    const disable = selected.includes(this.props.imdb)\n    return (\n      <div class=\"optionCard\">\n        <div class=\"optionTitle\">\n          <h3>{this.props.title}</h3>\n          <p>{this.props.release}</p>\n        </div>\n        <button disabled={disable} class=\"nominateButton\" onClick={this.nominate.bind(this)}>nominate</button>\n      </div>\n    )\n  }\n}\n\n\nclass NominationModal extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      results: []\n    }\n  }\n\n  /**\n   * Search\n   * \n   * Sends a request to OMBD API to search for the user's input query. Parses \n   * respose and generates Option components. Re-renders nomination modal via\n   * this.setState().\n   * \n   * @param {*} query \n   * @param {*} card \n   */\n  async search(query, card) {\n    query = query.replace(/ /g, \"+\")\n    const results = await axios(`https://www.omdbapi.com/?s=${query}&type=movie&apikey=c96ee350`)\n\n    if (results.data.Response === \"False\") {\n      this.setState({results: [<Option noresult={true}/>]})\n    } else {\n      var tableRows = []\n      results.data.Search.forEach(element => {\n        tableRows.push(<Option nomi={this} card={card} title={element.Title} imdb={element.imdbID} release={element.Year}/>)\n      });\n      this.setState({results: tableRows})\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchField\n          placeholder='Search for a movie'\n          onEnter={(input) => this.search(input, this.props.card)}\n          onChange={(input) => this.search(input, this.props.card)}\n          onSearchClick={(input) => this.search(input, this.props.card)}/>\n        <div id=\"results\">\n          <div id=\"resultschild\">\n            {this.state.results}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NominationModal","import React from 'react'\nimport Skylight from 'react-skylight'\nimport NominationModal from './nominationModal'\nimport '../css/card.css'\nimport {selected} from '../views/home'\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasNomination: localStorage.getItem(`nomi${props.num}`) ? true : false,\n      nominatedMovie: localStorage.getItem(`nomi${props.num}`) ? JSON.parse(localStorage.getItem(`nomi${props.num}`)).nominatedMovie : \"\",\n      rank: props.num,\n      imdbID: localStorage.getItem(`nomi${props.num}`) ? JSON.parse(localStorage.getItem(`nomi${props.num}`)).imdbID : -1,\n      release: localStorage.getItem(`nomi${props.num}`) ? JSON.parse(localStorage.getItem(`nomi${props.num}`)).release : -1,\n    }\n    this.modal = React.createRef()\n  }\n\n  /**\n   * Reset\n   * \n   * Resets the card to its default state. Removes the nomination IMDB ID from \n   * the list of nominated IDs. Checks to see if the num of nominations is \n   * greater/less than 5 and displays the banner accordingly.\n   */\n  reset() {\n    const position = selected.indexOf(this.state.imdbID)\n    selected.splice(position, 1)\n    localStorage.setItem(\"selected\", JSON.stringify(selected))\n    localStorage.removeItem(`nomi${this.props.num}`)\n    this.setState({hasNomination: false})\n    if (selected.length < 5) {this.props.home.setState({showBanner: false})}\n  }\n\n  render() {    \n    if (this.state.hasNomination === false) {\n      return (\n        <div class=\"card\">\n          <div class=\"cardnum\">\n            <h1>{this.props.num}</h1>\n          </div>\n          <div class=\"detail\" onClick={() => this.modal.current.show()} >\n            <h2>Click here to nominate your no.{this.props.num} movie</h2>\n            <p></p>\n            <p></p>\n          </div>\n          <div class=\"trashButton\" style={{visibility: 'hidden'}} onClick={this.reset.bind(this)}>\n            <i class='bx bxs-trash' ></i>\n          </div>\n          <div class='modal'>\n            <Skylight \n              hideOnOverlayClicked \n              ref={this.modal} \n              title={`Nominate your no.${this.props.num} movie`}>\n              <NominationModal card={this}/>\n            </Skylight>\n          </div>\n        </div>\n      )\n    }\n\n    if (this.state.hasNomination === true) {\n      return (\n        <div class=\"card\">\n          <div class=\"cardnum\">\n            <h1>{this.props.num}</h1>\n          </div>\n          <div class=\"movieDetail\">\n            <h2>{this.state.nominatedMovie}</h2>\n            <p>{this.state.release}</p>\n            <p>{`IMDB ID: ${this.state.imdbID}`}</p>\n          </div>\n          <div class=\"trashButton\" onClick={this.reset.bind(this)}>\n            <i class='bx bxs-trash' ></i>\n          </div>\n          <div class='modal'>\n            <Skylight \n              hideOnOverlayClicked \n              ref={this.modal} \n              title={`Nominate your no.${this.props.num} movie`}>\n              <NominationModal card={this}/>\n            </Skylight>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Card","import React from 'react'\nimport Card from '../components/card'\nimport Skylight from 'react-skylight'\nimport '../css/home.css'\nimport cogoToast from 'cogo-toast';\n\n// Global var selected to hold selected movie IDs\nexport var selected = localStorage.getItem('selected') ? JSON.parse(localStorage.getItem('selected')) : []\n\nif (localStorage.getItem(\"selected\")) {\n  if (JSON.parse(localStorage.getItem(\"selected\")).length > 0) { cogoToast.info(\"Movies loaded from storage\") }\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cards: [\n        <Card num=\"1\" home={this}/>,\n        <Card num=\"2\" home={this}/>,\n        <Card num=\"3\" home={this}/>,\n        <Card num=\"4\" home={this}/>,\n        <Card num=\"5\" home={this}/>,\n      ],\n      showBanner: selected.length === 5 ? true : false,\n    }\n    this.submitModal = React.createRef()\n  }\n\n  render() {\n    if (this.state.showBanner === false) {\n      var message = \"Please select 5 movies first!\"\n      if (this.banner) { this.banner.hide() }\n    } else {\n      message = \"Thank You!\"\n      this.banner = cogoToast.info(\"You have selected 5 movies!\", {hideAfter: 0})\n    }\n\n    return (\n      <div>\n        <h1 class=\"title\">The Shoppies</h1>\n        <h3>Nominate your top 5 movies for a Shoppie award!</h3>\n          {this.state.cards}\n        <div class=\"submitButtonContainer\">\n          <button \n            onClick={() => this.submitModal.current.show()}\n            class=\"submitButton\">Submit</button>\n        </div>\n        <Skylight\n          hideOnOverlayClicked \n          ref={this.submitModal} \n          title={message}>\n          <div class=\"about\">\n            <p>Currently, ths submit button does not actually do anything, but in a real application, this would be the point where a PUT request with the JSON stringified data would be sent to a server. The data would then be parsed and added to a database of some sort.</p>\n            <h2>About</h2>\n            <p>This simple web app is built with React. Almost all components were made from scratch, and make use of numerous React states and props.</p>\n            <a href=\"https://github.com/Nicholas-Chong/shopifychallenge\">Check out the source code on GitHub</a>\n            <h2>To Recruiters:</h2>\n            <p>I have a few other projects that showcase my skills as a developer. Please checkout my personal website to learn more about them! </p>\n            <a href=\"https://nicholas-chong.github.io/\" target=\"_blank\" rel=\"noreferrer\">Personal website</a>\n          </div>\n        </Skylight>\n        <div class=\"footer\">\n          <a \n            href=\"https://github.com/Nicholas-Chong/shopifychallenge\" \n            target=\"_blank\" rel=\"noreferrer\" \n            style={{color: \"black\"}}>\n            <i class=\"bx bxl-github\"/>\n          </a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './views/home'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}